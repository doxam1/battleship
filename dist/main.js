(()=>{"use strict";var e={919:(e,t,o)=>{o.d(t,{A:()=>s});var r=o(354),n=o.n(r),i=o(314),a=o.n(i)()(n());a.push([e.id,"*{box-sizing:border-box}body{background-color:#000;color:#fff;margin:0;box-sizing:border-box;height:100svh;overflow:hidden}.header{display:flex;justify-content:space-around;align-items:center;border-bottom:1px ridge #fff;height:80px}.header button.newGame{border:none;width:120px;height:40px;border-radius:1rem;background-color:dimgray;color:#fff}.header button.newGame:hover{opacity:75%;cursor:pointer}.header button.newGame:hover:active{opacity:55%}.newGameDialog{width:300px;height:25%;position:relative;border-radius:.4rem;box-shadow:1px 1px 3px 4px #e0ffff;border:none}.newGameDialog .newGameFieldset{display:flex;justify-content:center;align-items:center;gap:2rem;height:100%;border:none}.newGameDialog .newGameFieldset .gameTypeBtn{border:none;border-radius:1rem;width:100px;height:60px;background-color:#1e90ff;cursor:pointer}.newGameDialog .newGameFieldset .gameTypeBtn:active{opacity:80%}.newGameDialog .exitDialog{position:absolute;top:4%;right:1%}.twoBoardsScreen{display:grid;grid-template-columns:1fr .5fr 1fr;height:calc(100svh - 80px - 60px);justify-items:center;align-content:center}.twoBoardsScreen .centerBoard{border:1px solid pink;width:100%;display:flex;justify-content:center;align-items:center}.twoBoardsScreen .boardOne,.twoBoardsScreen .boardTwo{display:flex;flex-flow:wrap;width:400px;height:400px}.twoBoardsScreen .boardOne div,.twoBoardsScreen .boardTwo div{border:1px solid green}.twoBoardsScreen .boardOne div:hover,.twoBoardsScreen .boardTwo div:hover{background-color:red !important}.footer{display:flex;justify-content:left;align-items:center;box-shadow:0px 0px 3px 1px #fff;background-color:gray;height:50px;padding:10px}.footer a{display:flex;justify-content:center;align-items:center;color:#000;text-decoration:none;padding-left:6rem}","",{version:3,sources:["webpack://./src/styles/style.css"],names:[],mappings:"AAAA,EAAE,qBAAqB,CAAC,KAAK,qBAAqB,CAAC,UAAU,CAAC,QAAQ,CAAC,qBAAqB,CAAC,aAAa,CAAC,eAAe,CAAC,QAAQ,YAAY,CAAC,4BAA4B,CAAC,kBAAkB,CAAC,4BAA4B,CAAC,WAAW,CAAC,uBAAuB,WAAW,CAAC,WAAW,CAAC,WAAW,CAAC,kBAAkB,CAAC,wBAAwB,CAAC,UAAU,CAAC,6BAA6B,WAAW,CAAC,cAAc,CAAC,oCAAoC,WAAW,CAAC,eAAe,WAAW,CAAC,UAAU,CAAC,iBAAiB,CAAC,mBAAmB,CAAC,kCAAkC,CAAC,WAAW,CAAC,gCAAgC,YAAY,CAAC,sBAAsB,CAAC,kBAAkB,CAAC,QAAQ,CAAC,WAAW,CAAC,WAAW,CAAC,6CAA6C,WAAW,CAAC,kBAAkB,CAAC,WAAW,CAAC,WAAW,CAAC,wBAAwB,CAAC,cAAc,CAAC,oDAAoD,WAAW,CAAC,2BAA2B,iBAAiB,CAAC,MAAM,CAAC,QAAQ,CAAC,iBAAiB,YAAY,CAAC,kCAAkC,CAAC,iCAAiC,CAAC,oBAAoB,CAAC,oBAAoB,CAAC,8BAA8B,qBAAqB,CAAC,UAAU,CAAC,YAAY,CAAC,sBAAsB,CAAC,kBAAkB,CAAC,sDAAsD,YAAY,CAAC,cAAc,CAAC,WAAW,CAAC,YAAY,CAAC,8DAA8D,sBAAsB,CAAC,0EAA0E,+BAA+B,CAAC,QAAQ,YAAY,CAAC,oBAAoB,CAAC,kBAAkB,CAAC,+BAA+B,CAAC,qBAAqB,CAAC,WAAW,CAAC,YAAY,CAAC,UAAU,YAAY,CAAC,sBAAsB,CAAC,kBAAkB,CAAC,UAAU,CAAC,oBAAoB,CAAC,iBAAiB",sourcesContent:["*{box-sizing:border-box}body{background-color:#000;color:#fff;margin:0;box-sizing:border-box;height:100svh;overflow:hidden}.header{display:flex;justify-content:space-around;align-items:center;border-bottom:1px ridge #fff;height:80px}.header button.newGame{border:none;width:120px;height:40px;border-radius:1rem;background-color:dimgray;color:#fff}.header button.newGame:hover{opacity:75%;cursor:pointer}.header button.newGame:hover:active{opacity:55%}.newGameDialog{width:300px;height:25%;position:relative;border-radius:.4rem;box-shadow:1px 1px 3px 4px #e0ffff;border:none}.newGameDialog .newGameFieldset{display:flex;justify-content:center;align-items:center;gap:2rem;height:100%;border:none}.newGameDialog .newGameFieldset .gameTypeBtn{border:none;border-radius:1rem;width:100px;height:60px;background-color:#1e90ff;cursor:pointer}.newGameDialog .newGameFieldset .gameTypeBtn:active{opacity:80%}.newGameDialog .exitDialog{position:absolute;top:4%;right:1%}.twoBoardsScreen{display:grid;grid-template-columns:1fr .5fr 1fr;height:calc(100svh - 80px - 60px);justify-items:center;align-content:center}.twoBoardsScreen .centerBoard{border:1px solid pink;width:100%;display:flex;justify-content:center;align-items:center}.twoBoardsScreen .boardOne,.twoBoardsScreen .boardTwo{display:flex;flex-flow:wrap;width:400px;height:400px}.twoBoardsScreen .boardOne div,.twoBoardsScreen .boardTwo div{border:1px solid green}.twoBoardsScreen .boardOne div:hover,.twoBoardsScreen .boardTwo div:hover{background-color:red !important}.footer{display:flex;justify-content:left;align-items:center;box-shadow:0px 0px 3px 1px #fff;background-color:gray;height:50px;padding:10px}.footer a{display:flex;justify-content:center;align-items:center;color:#000;text-decoration:none;padding-left:6rem}"],sourceRoot:""}]);const s=a},314:e=>{e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var o="",r=void 0!==t[5];return t[4]&&(o+="@supports (".concat(t[4],") {")),t[2]&&(o+="@media ".concat(t[2]," {")),r&&(o+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),o+=e(t),r&&(o+="}"),t[2]&&(o+="}"),t[4]&&(o+="}"),o})).join("")},t.i=function(e,o,r,n,i){"string"==typeof e&&(e=[[null,e,void 0]]);var a={};if(r)for(var s=0;s<this.length;s++){var A=this[s][0];null!=A&&(a[A]=!0)}for(var c=0;c<e.length;c++){var l=[].concat(e[c]);r&&a[l[0]]||(void 0!==i&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=i),o&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=o):l[2]=o),n&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=n):l[4]="".concat(n)),t.push(l))}},t}},354:e=>{e.exports=function(e){var t=e[1],o=e[3];if(!o)return t;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(o)))),n="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),i="/*# ".concat(n," */");return[t].concat([i]).join("\n")}return[t].join("\n")}},72:e=>{var t=[];function o(e){for(var o=-1,r=0;r<t.length;r++)if(t[r].identifier===e){o=r;break}return o}function r(e,r){for(var i={},a=[],s=0;s<e.length;s++){var A=e[s],c=r.base?A[0]+r.base:A[0],l=i[c]||0,d="".concat(c," ").concat(l);i[c]=l+1;var h=o(d),p={css:A[1],media:A[2],sourceMap:A[3],supports:A[4],layer:A[5]};if(-1!==h)t[h].references++,t[h].updater(p);else{var u=n(p,r);r.byIndex=s,t.splice(s,0,{identifier:d,updater:u,references:1})}a.push(d)}return a}function n(e,t){var o=t.domAPI(t);return o.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;o.update(e=t)}else o.remove()}}e.exports=function(e,n){var i=r(e=e||[],n=n||{});return function(e){e=e||[];for(var a=0;a<i.length;a++){var s=o(i[a]);t[s].references--}for(var A=r(e,n),c=0;c<i.length;c++){var l=o(i[c]);0===t[l].references&&(t[l].updater(),t.splice(l,1))}i=A}}},659:e=>{var t={};e.exports=function(e,o){var r=function(e){if(void 0===t[e]){var o=document.querySelector(e);if(window.HTMLIFrameElement&&o instanceof window.HTMLIFrameElement)try{o=o.contentDocument.head}catch(e){o=null}t[e]=o}return t[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(o)}},540:e=>{e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},56:(e,t,o)=>{e.exports=function(e){var t=o.nc;t&&e.setAttribute("nonce",t)}},825:e=>{e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var t=e.insertStyleElement(e);return{update:function(o){!function(e,t,o){var r="";o.supports&&(r+="@supports (".concat(o.supports,") {")),o.media&&(r+="@media ".concat(o.media," {"));var n=void 0!==o.layer;n&&(r+="@layer".concat(o.layer.length>0?" ".concat(o.layer):""," {")),r+=o.css,n&&(r+="}"),o.media&&(r+="}"),o.supports&&(r+="}");var i=o.sourceMap;i&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),t.styleTagTransform(r,e,t.options)}(t,e,o)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},113:e=>{e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}}},t={};function o(r){var n=t[r];if(void 0!==n)return n.exports;var i=t[r]={id:r,exports:{}};return e[r](i,i.exports,o),i.exports}o.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return o.d(t,{a:t}),t},o.d=(e,t)=>{for(var r in t)o.o(t,r)&&!o.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},o.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),o.nc=void 0;var r=o(72),n=o.n(r),i=o(825),a=o.n(i),s=o(659),A=o.n(s),c=o(56),l=o.n(c),d=o(540),h=o.n(d),p=o(113),u=o.n(p),f=o(919),C={};function g(e,t){const o=document.querySelector(`.${t}`);o.innerHTML="";for(let r=0;r<e*e;r++){const n=document.createElement("div");let i;i=r<10?`0${r}`:r,n.classList.add("square",`${t}`,`${i.toString().split("").join(":")}`),n.style.width=400/e+"px",n.style.height=400/e+"px",n.style.backgroundColor="lightgray",o.appendChild(n)}}C.styleTagTransform=u(),C.setAttributes=l(),C.insert=A().bind(null,"head"),C.domAPI=a(),C.insertStyleElement=h(),n()(f.A,C),f.A&&f.A.locals&&f.A.locals;class m{constructor(e){this.length=e,this.direction="",this.hits=0,this.sunk=!1,this.cordinates=[],this.clicked=[]}hit(){return this.hits++}isSunk(){return this.hits==this.length&&(this.sunk=!0)}}class b{constructor(){this.board=b.newGameBoard(),this.ships=[new m(1),new m(1),new m(1),new m(1),new m(2),new m(2),new m(2),new m(3),new m(3),new m(4)],this.clickedNoShip=[],this.sunkShips=[]}static newGameBoard(){let e=[];for(let t=0;t<10;t++){let t=[];for(;t.length<10;)t.push(null);e.push(t)}return e}isAllShipsSunk(){return this.sunkShips.length==this.ships.length}placeShip(){const e=["horizontal","vertical"];for(let t=0;t<this.ships.length;t++){let o=!1,r=0;const n=1e4;for(;!o&&r<n;){const i=Math.floor(10*Math.random()),a=Math.floor(10*Math.random()),s=e[Math.floor(Math.random()*e.length)];this.ships[t].direction=s;let A=!0;if("vertical"===s){if(i+this.ships[t].length-1>=10)A=!1;else for(let e=-1;e<=this.ships[t].length;e++){for(let t=-1;t<=1;t++)if(i+e>=0&&i+e<10&&a+t>=0&&a+t<10&&null!==this.board[i+e]?.[a+t]){A=!1;break}if(!A)break}if(A){for(let e=0;e<this.ships[t].length;e++)this.board[i+e][a]=1,this.ships[t].cordinates.push(`${i+e}:${a}`);o=!0}}else if("horizontal"===s){if(a+this.ships[t].length-1>=10)A=!1;else for(let e=-1;e<=this.ships[t].length;e++){for(let t=-1;t<=1;t++)if(i+t>=0&&i+t<10&&a+e>=0&&a+e<10&&null!==this.board[i+t]?.[a+e]){A=!1;break}if(!A)break}if(A){for(let e=0;e<this.ships[t].length;e++)this.board[i][a+e]=1,this.ships[t].cordinates.push(`${i}:${a+e}`);o=!0}}r++,r>=n&&t--}r>=n&&(console.error("Failed to place the ship after maximum attempts"),this.resetBoard(),t=-1)}}receiveAttack(e,t){this.isAllShipsSunk()||this.ships.forEach((o=>{if(!o.clicked.includes(e))if(o.cordinates.includes(e)){if(o.hit(),o.clicked.push(e),this.board[e.slice(0,1)][e.slice(2)]=2,o.isSunk(),t.style.backgroundColor="gray",1==o.sunk){for(let e=0;e<o.cordinates.length;e++)for(let r=0;r<t.parentNode.children.length;r++)t.parentNode.children[r].classList.contains(o.cordinates[e])&&(t.parentNode.children[r].style.backgroundColor="orange");this.sunkShips.push(o)}}else{if(this.clickedNoShip.includes(e))return;this.clickedNoShip.push(e),t.style.backgroundColor="red"}}))}}class B{constructor(e){this.type=e,this.gameBoard=new b}playerTypeBoardBuilding(){let e;e="real"==this.type?".boardOne":".boardTwo";let t=[];for(let e=0;e<this.gameBoard.board.length;e++)for(let o=0;o<this.gameBoard.board[e].length;o++)null!==this.gameBoard.board[e][o]&&t.push(`${e}:${o}`);document.querySelectorAll(`${e}.square`).forEach((e=>{e.style.backgroundColor="lightgray";for(let o=0;o<=t.length;o++)e.classList.contains(t[o])&&("real"==this.type?e.style.backgroundColor="blue":e.style.backgroundColor="lightgray");e.onclick=e=>{this.gameBoard.receiveAttack(e.target.classList[2],e.target)}}))}}g(10,"boardOne"),g(10,"boardTwo"),document.querySelector(".humanVsHumanNewGameBtn").addEventListener("click",(()=>{const e=new B("real");console.log(e),e.gameBoard.placeShip();const t=new B("machine");t.gameBoard.placeShip(),e.playerTypeBoardBuilding(),t.playerTypeBoardBuilding(),w.close()}));const y=document.querySelector(".newGame"),w=document.querySelector(".newGameDialog");y.addEventListener("click",(()=>{w.showModal(),document.querySelector(".exitDialog").onclick=()=>{w.close()}}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,