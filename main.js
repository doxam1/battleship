(()=>{"use strict";var e={919:(e,t,r)=>{r.d(t,{A:()=>s});var o=r(354),n=r.n(o),i=r(314),a=r.n(i)()(n());a.push([e.id,"*{box-sizing:border-box}body{background-color:#000;color:#fff;margin:0;box-sizing:border-box;height:100svh;overflow:hidden}.header{display:flex;justify-content:space-around;align-items:center;border-bottom:1px ridge #fff;height:80px}.header button.newGame{border:none;width:120px;height:40px;border-radius:1rem;background-color:dimgray;color:#fff}.header button.newGame:hover{opacity:75%;cursor:pointer}.header button.newGame:hover:active{opacity:55%}.newGameDialog{width:300px;height:25%;position:relative;border-radius:.4rem;box-shadow:1px 1px 3px 4px #e0ffff;border:none}.newGameDialog .newGameFieldset{display:flex;justify-content:center;align-items:center;gap:2rem;height:100%;border:none}.newGameDialog .newGameFieldset .gameTypeBtn{border:none;border-radius:1rem;width:100px;height:60px;background-color:#1e90ff;cursor:pointer}.newGameDialog .newGameFieldset .gameTypeBtn:active{opacity:80%}.newGameDialog .exitDialog{position:absolute;top:4%;right:1%}.twoBoardsScreen{display:grid;grid-template-columns:1fr .5fr 1fr;height:calc(100svh - 80px - 60px);justify-items:center;align-content:center}.twoBoardsScreen .centerBoard{width:100%;display:flex;justify-content:center;align-items:center;font-size:1.2rem}.twoBoardsScreen .boardOne,.twoBoardsScreen .boardTwo{display:flex;flex-flow:wrap;width:400px;height:400px}.twoBoardsScreen .boardOne div,.twoBoardsScreen .boardTwo div{border:1px solid green}.twoBoardsScreen .boardOne div:hover,.twoBoardsScreen .boardTwo div:hover{background-color:red !important}.footer{display:flex;justify-content:left;align-items:center;box-shadow:0px 0px 3px 1px #fff;background-color:gray;height:50px;padding:10px}.footer a{display:flex;justify-content:center;align-items:center;color:#000;text-decoration:none;padding-left:6rem}@media screen and (max-width: 600px){body{display:flex;flex-direction:column;overflow:auto}body .footer{display:none;bottom:0;width:100%}.twoBoardsScreen{display:flex;flex-direction:column}.twoBoardsScreen .boardOne,.twoBoardsScreen .boardTwo{display:flex;flex-flow:wrap;width:400px;height:400px}}","",{version:3,sources:["webpack://./src/styles/style.css"],names:[],mappings:"AAAA,EAAE,qBAAqB,CAAC,KAAK,qBAAqB,CAAC,UAAU,CAAC,QAAQ,CAAC,qBAAqB,CAAC,aAAa,CAAC,eAAe,CAAC,QAAQ,YAAY,CAAC,4BAA4B,CAAC,kBAAkB,CAAC,4BAA4B,CAAC,WAAW,CAAC,uBAAuB,WAAW,CAAC,WAAW,CAAC,WAAW,CAAC,kBAAkB,CAAC,wBAAwB,CAAC,UAAU,CAAC,6BAA6B,WAAW,CAAC,cAAc,CAAC,oCAAoC,WAAW,CAAC,eAAe,WAAW,CAAC,UAAU,CAAC,iBAAiB,CAAC,mBAAmB,CAAC,kCAAkC,CAAC,WAAW,CAAC,gCAAgC,YAAY,CAAC,sBAAsB,CAAC,kBAAkB,CAAC,QAAQ,CAAC,WAAW,CAAC,WAAW,CAAC,6CAA6C,WAAW,CAAC,kBAAkB,CAAC,WAAW,CAAC,WAAW,CAAC,wBAAwB,CAAC,cAAc,CAAC,oDAAoD,WAAW,CAAC,2BAA2B,iBAAiB,CAAC,MAAM,CAAC,QAAQ,CAAC,iBAAiB,YAAY,CAAC,kCAAkC,CAAC,iCAAiC,CAAC,oBAAoB,CAAC,oBAAoB,CAAC,8BAA8B,UAAU,CAAC,YAAY,CAAC,sBAAsB,CAAC,kBAAkB,CAAC,gBAAgB,CAAC,sDAAsD,YAAY,CAAC,cAAc,CAAC,WAAW,CAAC,YAAY,CAAC,8DAA8D,sBAAsB,CAAC,0EAA0E,+BAA+B,CAAC,QAAQ,YAAY,CAAC,oBAAoB,CAAC,kBAAkB,CAAC,+BAA+B,CAAC,qBAAqB,CAAC,WAAW,CAAC,YAAY,CAAC,UAAU,YAAY,CAAC,sBAAsB,CAAC,kBAAkB,CAAC,UAAU,CAAC,oBAAoB,CAAC,iBAAiB,CAAC,qCAAqC,KAAK,YAAY,CAAC,qBAAqB,CAAC,aAAa,CAAC,aAAa,YAAY,CAAC,QAAQ,CAAC,UAAU,CAAC,iBAAiB,YAAY,CAAC,qBAAqB,CAAC,sDAAsD,YAAY,CAAC,cAAc,CAAC,WAAW,CAAC,YAAY,CAAC",sourcesContent:["*{box-sizing:border-box}body{background-color:#000;color:#fff;margin:0;box-sizing:border-box;height:100svh;overflow:hidden}.header{display:flex;justify-content:space-around;align-items:center;border-bottom:1px ridge #fff;height:80px}.header button.newGame{border:none;width:120px;height:40px;border-radius:1rem;background-color:dimgray;color:#fff}.header button.newGame:hover{opacity:75%;cursor:pointer}.header button.newGame:hover:active{opacity:55%}.newGameDialog{width:300px;height:25%;position:relative;border-radius:.4rem;box-shadow:1px 1px 3px 4px #e0ffff;border:none}.newGameDialog .newGameFieldset{display:flex;justify-content:center;align-items:center;gap:2rem;height:100%;border:none}.newGameDialog .newGameFieldset .gameTypeBtn{border:none;border-radius:1rem;width:100px;height:60px;background-color:#1e90ff;cursor:pointer}.newGameDialog .newGameFieldset .gameTypeBtn:active{opacity:80%}.newGameDialog .exitDialog{position:absolute;top:4%;right:1%}.twoBoardsScreen{display:grid;grid-template-columns:1fr .5fr 1fr;height:calc(100svh - 80px - 60px);justify-items:center;align-content:center}.twoBoardsScreen .centerBoard{width:100%;display:flex;justify-content:center;align-items:center;font-size:1.2rem}.twoBoardsScreen .boardOne,.twoBoardsScreen .boardTwo{display:flex;flex-flow:wrap;width:400px;height:400px}.twoBoardsScreen .boardOne div,.twoBoardsScreen .boardTwo div{border:1px solid green}.twoBoardsScreen .boardOne div:hover,.twoBoardsScreen .boardTwo div:hover{background-color:red !important}.footer{display:flex;justify-content:left;align-items:center;box-shadow:0px 0px 3px 1px #fff;background-color:gray;height:50px;padding:10px}.footer a{display:flex;justify-content:center;align-items:center;color:#000;text-decoration:none;padding-left:6rem}@media screen and (max-width: 600px){body{display:flex;flex-direction:column;overflow:auto}body .footer{display:none;bottom:0;width:100%}.twoBoardsScreen{display:flex;flex-direction:column}.twoBoardsScreen .boardOne,.twoBoardsScreen .boardTwo{display:flex;flex-flow:wrap;width:400px;height:400px}}"],sourceRoot:""}]);const s=a},314:e=>{e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var r="",o=void 0!==t[5];return t[4]&&(r+="@supports (".concat(t[4],") {")),t[2]&&(r+="@media ".concat(t[2]," {")),o&&(r+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),r+=e(t),o&&(r+="}"),t[2]&&(r+="}"),t[4]&&(r+="}"),r})).join("")},t.i=function(e,r,o,n,i){"string"==typeof e&&(e=[[null,e,void 0]]);var a={};if(o)for(var s=0;s<this.length;s++){var c=this[s][0];null!=c&&(a[c]=!0)}for(var A=0;A<e.length;A++){var l=[].concat(e[A]);o&&a[l[0]]||(void 0!==i&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=i),r&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=r):l[2]=r),n&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=n):l[4]="".concat(n)),t.push(l))}},t}},354:e=>{e.exports=function(e){var t=e[1],r=e[3];if(!r)return t;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(r)))),n="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),i="/*# ".concat(n," */");return[t].concat([i]).join("\n")}return[t].join("\n")}},72:e=>{var t=[];function r(e){for(var r=-1,o=0;o<t.length;o++)if(t[o].identifier===e){r=o;break}return r}function o(e,o){for(var i={},a=[],s=0;s<e.length;s++){var c=e[s],A=o.base?c[0]+o.base:c[0],l=i[A]||0,d="".concat(A," ").concat(l);i[A]=l+1;var h=r(d),p={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==h)t[h].references++,t[h].updater(p);else{var u=n(p,o);o.byIndex=s,t.splice(s,0,{identifier:d,updater:u,references:1})}a.push(d)}return a}function n(e,t){var r=t.domAPI(t);return r.update(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap&&t.supports===e.supports&&t.layer===e.layer)return;r.update(e=t)}else r.remove()}}e.exports=function(e,n){var i=o(e=e||[],n=n||{});return function(e){e=e||[];for(var a=0;a<i.length;a++){var s=r(i[a]);t[s].references--}for(var c=o(e,n),A=0;A<i.length;A++){var l=r(i[A]);0===t[l].references&&(t[l].updater(),t.splice(l,1))}i=c}}},659:e=>{var t={};e.exports=function(e,r){var o=function(e){if(void 0===t[e]){var r=document.querySelector(e);if(window.HTMLIFrameElement&&r instanceof window.HTMLIFrameElement)try{r=r.contentDocument.head}catch(e){r=null}t[e]=r}return t[e]}(e);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(r)}},540:e=>{e.exports=function(e){var t=document.createElement("style");return e.setAttributes(t,e.attributes),e.insert(t,e.options),t}},56:(e,t,r)=>{e.exports=function(e){var t=r.nc;t&&e.setAttribute("nonce",t)}},825:e=>{e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var t=e.insertStyleElement(e);return{update:function(r){!function(e,t,r){var o="";r.supports&&(o+="@supports (".concat(r.supports,") {")),r.media&&(o+="@media ".concat(r.media," {"));var n=void 0!==r.layer;n&&(o+="@layer".concat(r.layer.length>0?" ".concat(r.layer):""," {")),o+=r.css,n&&(o+="}"),r.media&&(o+="}"),r.supports&&(o+="}");var i=r.sourceMap;i&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),t.styleTagTransform(o,e,t.options)}(t,e,r)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(t)}}}},113:e=>{e.exports=function(e,t){if(t.styleSheet)t.styleSheet.cssText=e;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(e))}}}},t={};function r(o){var n=t[o];if(void 0!==n)return n.exports;var i=t[o]={id:o,exports:{}};return e[o](i,i.exports,r),i.exports}r.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return r.d(t,{a:t}),t},r.d=(e,t)=>{for(var o in t)r.o(t,o)&&!r.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:t[o]})},r.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),r.nc=void 0;var o=r(72),n=r.n(o),i=r(825),a=r.n(i),s=r(659),c=r.n(s),A=r(56),l=r.n(A),d=r(540),h=r.n(d),p=r(113),u=r.n(p),f=r(919),C={};function m(e,t){const r=document.querySelector(`.${t}`);r.innerHTML="";for(let o=0;o<e*e;o++){const n=document.createElement("div");let i;i=o<10?`0${o}`:o,n.classList.add("square",`${t}`,`${i.toString().split("").join(":")}`),n.style.width=400/e+"px",n.style.height=400/e+"px",n.style.backgroundColor="lightgray",r.appendChild(n)}}C.styleTagTransform=u(),C.setAttributes=l(),C.insert=c().bind(null,"head"),C.domAPI=a(),C.insertStyleElement=h(),n()(f.A,C),f.A&&f.A.locals&&f.A.locals;class g{constructor(e){this.length=e,this.direction="",this.hits=0,this.sunk=!1,this.cordinates=[],this.clicked=[]}hit(){return this.hits++}isSunk(){return this.hits==this.length&&(this.sunk=!0)}}class y{constructor(){this.board=this.newGameBoard(),this.ships=[new g(1),new g(1),new g(1),new g(1),new g(2),new g(2),new g(2),new g(3),new g(3),new g(4)],this.clickedNoShip=[],this.sunkShips=[],this.clicked=[],this.hasShipCordinatesArr=[]}hasShipCordinates(){for(let e=0;e<this.ships.length;e++)for(let t=0;t<this.ships[e].cordinates.length;t++)this.hasShipCordinatesArr.push(this.ships[e].cordinates[t])}newGameBoard(){let e=[];for(let t=0;t<10;t++){let t=[];for(;t.length<10;)t.push(null);e.push(t)}return e}isAllShipsSunk(){return this.sunkShips.length==this.ships.length}placeShip(){const e=["horizontal","vertical"];for(let t=0;t<this.ships.length;t++){let r=!1,o=0;const n=1e4;for(;!r&&o<n;){const i=Math.floor(10*Math.random()),a=Math.floor(10*Math.random()),s=e[Math.floor(Math.random()*e.length)];this.ships[t].direction=s;let c=!0;if("vertical"===s){if(i+this.ships[t].length-1>=10)c=!1;else for(let e=-1;e<=this.ships[t].length;e++){for(let t=-1;t<=1;t++)if(i+e>=0&&i+e<10&&a+t>=0&&a+t<10&&null!==this.board[i+e]?.[a+t]){c=!1;break}if(!c)break}if(c){for(let e=0;e<this.ships[t].length;e++)this.board[i+e][a]=1,this.ships[t].cordinates.push(`${i+e}:${a}`);r=!0}}else if("horizontal"===s){if(a+this.ships[t].length-1>=10)c=!1;else for(let e=-1;e<=this.ships[t].length;e++){for(let t=-1;t<=1;t++)if(i+t>=0&&i+t<10&&a+e>=0&&a+e<10&&null!==this.board[i+t]?.[a+e]){c=!1;break}if(!c)break}if(c){for(let e=0;e<this.ships[t].length;e++)this.board[i][a+e]=1,this.ships[t].cordinates.push(`${i}:${a+e}`);r=!0}}o++,o>=n&&t--}o>=n&&(console.error("Failed to place the ship after maximum attempts"),this.resetBoard(),t=-1)}}receiveAttack(e,t){if(this.clicked.includes(e))return console.log("already clicked"),!1;if(this.clicked.push(e),this.isAllShipsSunk())return;if(this.clickedNoShip.includes(e))return;let r=!1;return this.ships.forEach((o=>{if(!o.clicked.includes(e))if(o.cordinates.includes(e)){if(o.hit(),o.clicked.push(e),this.board[e.slice(0,1)][e.slice(2)]=2,t.style.background="gray center/110% url('./image/noun-ship-4897095.svg')",r=!0,o.isSunk()){for(let e=0;e<o.cordinates.length;e++)for(let r=0;r<t.parentNode.children.length;r++)t.parentNode.children[r].classList.contains(o.cordinates[e])&&(t.parentNode.children[r].style.backgroundColor="orange");this.sunkShips.push(o)}}else r||this.clickedNoShip.includes(e)||(this.clickedNoShip.push(e),t.style.backgroundColor="red")})),!0}}class b{constructor(e,t){this.type=e,this.name=t,this.gameBoard=new y}playerTypeBoardBuilding(){let e;e="real"==this.type?".boardOne":".boardTwo";const t=[];for(let e=0;e<this.gameBoard.board.length;e++)for(let r=0;r<this.gameBoard.board[e].length;r++)null!==this.gameBoard.board[e][r]&&t.push(`${e}:${r}`);document.querySelectorAll(`${e}.square`).forEach((e=>{e.style.background="lightgray";for(let r=0;r<=t.length;r++)e.classList.contains(t[r])&&("real"==this.type?e.style.background="white center/110% url('./image/noun-ship-4897095.svg')":e.style.backgroundColor="lightgray")}))}machineAttack(){}}class w{constructor(e,t){this.players=[e,t],this.currentTurnIndex=0}getCurrnetPlayer(){return this.players[this.currentTurnIndex]}swichTurns(){this.currentTurnIndex=1-this.currentTurnIndex}startGame(){this.players.forEach((e=>{e.gameBoard.placeShip(),e.playerTypeBoardBuilding(),e.gameBoard.hasShipCordinates()}))}gameOver(){return this.players[0].gameBoard.isAllShipsSunk()||this.players[1].gameBoard.isAllShipsSunk()}playGame(){if(this.gameOver())return;const e=this.getCurrnetPlayer(),t=this.players[1-this.currentTurnIndex];let r;r=e==this.players[1]?".boardOne":".boardTwo";const o=document.querySelectorAll(`${r}.square`),n=r=>{const i=document.querySelector(".centerBoard");if("machine"==t.type?i.textContent=`< ${t.name} Turn`:i.textContent=`${t.name} Turn >`,r.target.classList.add("clickedSquare"),t.gameBoard.receiveAttack(r.target.classList[2],r.target)){if(t.gameBoard.isAllShipsSunk())return void(i.textContent=`${e.name} wins!`);this.swichTurns(),o.forEach((e=>e.removeEventListener("click",n))),this.playGame()}};o.forEach((e=>{e.addEventListener("click",n,{once:!0})}));const i=document.querySelectorAll(".boardOne.square");"machine"==e.type&&setTimeout((()=>{(()=>{let e=Array.from(i).filter((e=>!e.classList.contains("clickedSquare")));e[Math.floor(Math.random()*e.length)].click()})()}),750)}}m(10,"boardOne"),m(10,"boardTwo"),document.querySelector(".humanVsHumanNewGameBtn").addEventListener("click",(()=>{document.querySelectorAll(".square").forEach((e=>{e.classList.remove("clickedSquare"),e.replaceWith(e.cloneNode(!0))})),document.querySelector(".centerBoard").innerHTML="Human turn >";let e=new b("real","Human"),t=new b("machine","Machina"),r=new w(e,t);r.startGame(),r.playGame(),x.close()}));const B=document.querySelector(".newGame"),x=document.querySelector(".newGameDialog");B.addEventListener("click",(()=>{x.showModal(),document.querySelector(".exitDialog").onclick=()=>{x.close()}}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,